Video 4
Hapus git
rm -rf .git

Video 5 
Free themes for Bootstrap
https://bootswatch.com/
1. download
2. tarok di src
3. import di index.js

install bootstrap
npm install react-bootstrap

import fontawesome untuk icon
1. dari https://cdnjs.com/libraries/font-awesome
2. copy link tag
3. import di index.html

video 7
di rating.js
kirim default props
Rating.defaultProps = {
  color: '#f8e825',
};

proyotpye untuk type dari propsnya
Rating.propTypes = {
  value: PropTypes.number.isRequired,
  text: PropTypes.string.isRequired,
  color: PropTypes.string
};

video 8
install react router
npm i react-router-dom react-router-bootstrap
react-router-bootstrap ==> agar bisa link

di header.js
import {LinkContainer} from 'react-router-bootstrap'
agar tidak loading ketika pindah halaman

Video 10
TONTON ULANG UNTUK LEBIH DETAIL

GET	= GET DATA
POST	= adding data
PUT	= update data
DELETE	= delete data

Video 11
membuat folder backend
npm init

instal express di root
npm i express

menjalankan server
node backend/server atau npm run start

Video 12
npm i axios
axios untuk membuat http request ke backend / fetch api

tidak ada error cors 
karena pakai PROXY di package.json frontend/reactnya
"proxy": "http://127.0.0.1:5000"

Kalo pemanggilan data gunakan async await
  useEffect(() => {
    const fetchProduct = async () => {
      const { data } = await axios.get(`/api/products/${match.params.id}`);
      setProduct(data);
    };
    fetchProduct();
  }, []);


Video 13
npm i -D nodemon concurrently
untuk menjalankan backend dan frontend bersamaan

Video 14
dotenv = untuk api key, jwt, database 
	untuk informasi sensitif
npm i dotenv
lihat dokumentasi di https://www.npmjs.com/package/dotenv

Video 15
require itu js biasa
di convert jadi js modern/ ecmascript
harus node --version > 14.0

di package.json root tambah
"type":"module",

kalao js file tambah .js

Video 17
npm i mongoose
pembuatan folder config/db.js

kalau promise, kayak then.cacth try catch itu perlu async await

Video 18
npm i colors
untuk membedakan warna 
- server jalan
- database atlas
- error

Video 19
Membuat skema di models backend

Video 20
npm i bcryptjs

kalo bcrypt doang bisa ada masalah

Video 21
Database seeder supaya mudah input data

node backend/seed -d
untuk destroy data

di package.json
   "data:import": "node backend/seeder",
    "data:destroy": "node backend/seeder -d"

Video 22
Fetch data from DB
express-async-handler
Simple middleware for handling exceptions inside of async express routes and passing them to your express error handlers.
npm i express-async-handler

Video 24
Error handling API

Video 25
Redux tidak hanya untuk react

Video 26
npm i redux react-redux redux-thunk redux-devtools-extension

redux bisa dipakai di angular
react-redux	= redux untuk react
redux-thunk	= utk buat async request, karena berhubungan server
redux-devtools-extension = agar bisa dipake extensi redux-devtools di browser

pembuatan file store.js

Video 28
useDispatch = call action
useSelector = select part of state

Video 31
 <Route path='/cart/:id?' component={CartScreen} />
          {/* opisonal idnya */}


Video 32
getState = get entire state tree

Video 33
import {useDispatch,useSelector} from 'react-redux'
sering dipake di redux

Video 34
ubah cartscreen

Video 35
remove cart item

video 36
pembuatan controller pada backend

video 37
user model

// Sebelum brcrypt di controller
userSchema.methods.matchPassword = async function (enteredPassword) {
  return await bcrypt.compare(enteredPassword, this.password);
};


Video 38
JWT
Authentication	= ketika take email dan password ke database
Authorization	= user access

Video 39
untuk membuat token butuh ==> .sign
var token = jwt.sign({ foo: 'bar' }, 'shhhhh');
shhhh ==> secret code

pembuatan folder utils/generateToken

Video 40
token dikirim ke headers Authorization
lihat GET /api/users/profile di postman
token diambil dari headers

Video 41
Menambahkan/simpan token ke postman

di POST /api/users/login 
test tambah:
pm.environment.set("TOKEN",pm.response.json().token)

di GET /api/users/profile
authorization:
type: bearer token
token: {{TOKEN}}

cek di environment pojok kanan atas

Video 42
Register user di postman

middleware enkrip password di model user
perubahan di userController, userModel,userRoutes

Video 43
User login
pembuatan userAction,userConstant,useReducer dan ubah store

Video 44
LoginScreen.js

ini kalo checkout tanpa login
 const redirect = location.search ? location.search.split('=')[1] : '/';

